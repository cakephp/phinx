name: Phinx CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:
  testsuite:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.2', '7.4']
        db-type: [sqlite, mysql, pgsql]
    name: PHP ${{ matrix.php-version }} & ${{ matrix.db-type }}

    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres

    steps:
    - name: Setup MySQL
      if: matrix.db-type == 'mysql'
      run: |
        if [[ ${{ matrix.php-version }} == '7.2' ]]; then
          sudo service mysql stop
          # MySQL 8
          docker run --rm --name=mysqld -e MYSQL_ROOT_PASSWORD=root --tmpfs /var/lib/mysql:rw --network=host -d mysql:8.0.20 --default-authentication-plugin=mysql_native_password --disable-log-bin --innodb-flush-method=O_DIRECT_NO_FSYNC
        else
          # MySQL 5.7
          sudo service mysql start
        fi

    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        coverage: pcov

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Get date part for cache key
      id: key-date
      run: echo "::set-output name=date::$(date +'%Y-%m')"

    - name: Cache composer dependencies
      uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}

    - name: composer install
      run: composer install

    - name: Configure PHPUnit matcher
      if: matrix.php-version == '7.4' && matrix.db-type == 'mysql'
      uses: mheap/phpunit-matcher-action@master

    - name: Run PHPUnit
      run: |
        if [[ ${{ matrix.db-type }} == 'mysql' ]]; then mysql -h 127.0.0.1 -u root -proot -e 'CREATE DATABASE phinx;'; fi
        if [[ ${{ matrix.db-type }} == 'pgsql' ]]; then psql -c 'CREATE DATABASE phinx;' postgresql://postgres:postgres@127.0.0.1; fi

        if [[ ${{ matrix.db-type }} == 'sqlite' ]]; then export SQLITE_DSN='sqlite:///phinx'; fi
        if [[ ${{ matrix.db-type }} == 'mysql' ]]; then export MYSQL_DSN='mysql://root:root@127.0.0.1/phinx'; fi
        if [[ ${{ matrix.db-type }} == 'pgsql' ]]; then export PGSQL_DSN='pgsql://postgres:postgres@127.0.0.1/phinx'; fi

        if [[ ${{ matrix.php-version }} == '7.2' ]]; then
          vendor/bin/phpunit
        elif [[ ${{ matrix.php-version }} == '7.4' && ${{ matrix.db-type }} == 'mysql' ]]; then
          vendor/bin/phpunit --teamcity --verbose
        else
          vendor/bin/phpunit --verbose
        fi

  coding-standard:
    name: Coding Standard
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.2'
        coverage: none

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Get date part for cache key
      id: key-date
      run: echo "::set-output name=date::$(date +'%Y-%m')"

    - name: Cache composer dependencies
      uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}

    - name: composer install
      run: composer install

    - name: Run PHP CodeSniffer
      run: composer cs-check

  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.2'
        coverage: none
        tools: cs2pr

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Get date part for cache key
      id: key-date
      run: echo "::set-output name=date::$(date +'%Y-%m')"

    - name: Cache composer dependencies
      uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}

    - name: composer install
      run: composer stan-setup

    - name: Run phpstan
      run: vendor/bin/phpstan.phar analyse src/ --error-format=checkstyle | cs2pr
